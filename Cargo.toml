[package]
name = "league-skinset-finder"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
# Lets us derive things like Display
derive_more = "0.99.17"

# Used to turn the Lane enum into bitflags
enumflags2 = { version = "0.7.8", features = ["std", "serde"] }

# Web frontend framework
yew = { version = "0.21.0", features = ["csr"] }

# Some utilities for dealing with web frontend stuff.
web-sys = { version = "0.3.64", features = ["HtmlSelectElement"] }

# Force serde support for some yew types re-exported from implicit-clone
implicit-clone = { version = "^0.4.1", features = ["serde"] }

# Icon pack to use with Yew -- Icons have to be included by feature name. 
yew_icons = { version = "0.8.0", features = [
    "LucideExternalLink", 
    "BootstrapTrash", 
    "BootstrapPersonAdd", 
    "HeroiconsOutlineEye",
    "HeroiconsOutlineEyeSlash"
] }

# Use over std::time::Instant due to compatability issues with wasm
instant = { version = "0.1.12", features = ["wasm-bindgen"] }

# Logging to the web console. 
log = "0.4.20"
console_log = { version = "1.0.0", features = ["color"] }

# Universally unique identifier generation
uuid = { version = "1.5.0", features = ["v4"] }

# Serialization and deserizalization 
serde = { version = "1.0.189", features = ["derive", "rc"] }

# Need to specify feature for getrandom to make it work on wasm targets. 
getrandom = { version = "0.2", features = ["js"] }
const-str = "0.5.6"

# For build script to timestamp every build. 
[build-dependencies]
# Error handling 
anyhow = "1.0"
# Unindent to normalize generated rust code. 
unindent = "0.2.3"
# Scraper to extract tables from our source data -- we do this at compile time. 
scraper = "0.17.1"
